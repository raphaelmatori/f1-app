name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

env:
  MYSQL_HOST: localhost
  MYSQL_PORT: 3306
  MYSQL_DATABASE: f1_champions
  MYSQL_USER: root
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  SPRING_PROFILES_ACTIVE: prod

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [17, 21]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: f1_champions
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: gradle
        cache-dependency-path: backend/build.gradle

    - name: Grant execute permission for gradlew
      working-directory: ./backend
      run: chmod +x gradlew

    - name: Build with Gradle
      working-directory: ./backend
      run: ./gradlew build --no-daemon

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/build/libs
        retention-days: 7

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'F1 Champions Backend'
        path: 'backend'
        format: 'HTML'
        out: 'reports'

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: backend-security-report
        path: reports
        retention-days: 7

  notify:
    needs: [build, security]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const run_id = context.runId;
          const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
          
          github.rest.issues.create({
            owner,
            repo,
            title: `Backend CI Pipeline Failed - Run #${run_id}`,
            body: `The backend CI pipeline has failed. Please check the [run details](${run_url}) for more information.`
          }); 